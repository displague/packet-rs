/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CapacityReport {
    #[serde(rename = "ams1", skip_serializing_if = "Option::is_none")]
    pub ams1: Option<crate::models::CapacityPerFacility>,
    #[serde(rename = "atl1", skip_serializing_if = "Option::is_none")]
    pub atl1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "dfw1", skip_serializing_if = "Option::is_none")]
    pub dfw1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "ewr1", skip_serializing_if = "Option::is_none")]
    pub ewr1: Option<crate::models::CapacityPerFacility>,
    #[serde(rename = "fra1", skip_serializing_if = "Option::is_none")]
    pub fra1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "iad1", skip_serializing_if = "Option::is_none")]
    pub iad1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "lax1", skip_serializing_if = "Option::is_none")]
    pub lax1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "nrt1", skip_serializing_if = "Option::is_none")]
    pub nrt1: Option<crate::models::CapacityPerFacility>,
    #[serde(rename = "ord1", skip_serializing_if = "Option::is_none")]
    pub ord1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "sea1", skip_serializing_if = "Option::is_none")]
    pub sea1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "sin1", skip_serializing_if = "Option::is_none")]
    pub sin1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "sjc1", skip_serializing_if = "Option::is_none")]
    pub sjc1: Option<crate::models::CapacityPerFacility>,
    #[serde(rename = "syd1", skip_serializing_if = "Option::is_none")]
    pub syd1: Option<crate::models::CapacityPerNewFacility>,
    #[serde(rename = "yyz1", skip_serializing_if = "Option::is_none")]
    pub yyz1: Option<crate::models::CapacityPerNewFacility>,
}

impl CapacityReport {
    pub fn new() -> CapacityReport {
        CapacityReport {
            ams1: None,
            atl1: None,
            dfw1: None,
            ewr1: None,
            fra1: None,
            iad1: None,
            lax1: None,
            nrt1: None,
            ord1: None,
            sea1: None,
            sin1: None,
            sjc1: None,
            syd1: None,
            yyz1: None,
        }
    }
}


