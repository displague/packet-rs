/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct VirtualNetwork {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "vxlan", skip_serializing_if = "Option::is_none")]
    pub vxlan: Option<i32>,
    #[serde(rename = "facility", skip_serializing_if = "Option::is_none")]
    pub facility: Option<crate::models::Href>,
    #[serde(rename = "instances", skip_serializing_if = "Option::is_none")]
    pub instances: Option<Vec<crate::models::Href>>,
    #[serde(rename = "assigned_to", skip_serializing_if = "Option::is_none")]
    pub assigned_to: Option<crate::models::Href>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
}

impl VirtualNetwork {
    pub fn new() -> VirtualNetwork {
        VirtualNetwork {
            id: None,
            description: None,
            vxlan: None,
            facility: None,
            instances: None,
            assigned_to: None,
            href: None,
        }
    }
}


