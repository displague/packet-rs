/*
 * Packet API
 *
 * This is the API for Packet. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@packet.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpReservation {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "address_family", skip_serializing_if = "Option::is_none")]
    pub address_family: Option<i32>,
    #[serde(rename = "netmask", skip_serializing_if = "Option::is_none")]
    pub netmask: Option<String>,
    #[serde(rename = "public", skip_serializing_if = "Option::is_none")]
    pub public: Option<bool>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "cidr", skip_serializing_if = "Option::is_none")]
    pub cidr: Option<i32>,
    #[serde(rename = "management", skip_serializing_if = "Option::is_none")]
    pub management: Option<bool>,
    #[serde(rename = "manageable", skip_serializing_if = "Option::is_none")]
    pub manageable: Option<bool>,
    #[serde(rename = "addon", skip_serializing_if = "Option::is_none")]
    pub addon: Option<bool>,
    #[serde(rename = "bill", skip_serializing_if = "Option::is_none")]
    pub bill: Option<bool>,
    #[serde(rename = "assignments", skip_serializing_if = "Option::is_none")]
    pub assignments: Option<Vec<crate::models::IpAssignment>>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "facility", skip_serializing_if = "Option::is_none")]
    pub facility: Option<crate::models::Facility>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
}

impl IpReservation {
    pub fn new() -> IpReservation {
        IpReservation {
            id: None,
            address_family: None,
            netmask: None,
            public: None,
            enabled: None,
            cidr: None,
            management: None,
            manageable: None,
            addon: None,
            bill: None,
            assignments: None,
            network: None,
            created_at: None,
            facility: None,
            href: None,
            tags: None,
            state: None,
        }
    }
}


