/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterconnectionPort {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// 'primary'
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// A switch 'short ID'
    #[serde(rename = "switch_id", skip_serializing_if = "Option::is_none")]
    pub switch_id: Option<String>,
    #[serde(rename = "virtual_circuits", skip_serializing_if = "Option::is_none")]
    pub virtual_circuits: Option<crate::models::VirtualCircuitList>,
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<crate::models::Href>,
}

impl InterconnectionPort {
    pub fn new() -> InterconnectionPort {
        InterconnectionPort {
            id: None,
            role: None,
            status: None,
            switch_id: None,
            virtual_circuits: None,
            organization: None,
        }
    }
}


