/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct License {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "license_key", skip_serializing_if = "Option::is_none")]
    pub license_key: Option<String>,
    #[serde(rename = "licensee_product", skip_serializing_if = "Option::is_none")]
    pub licensee_product: Option<crate::models::Href>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<f32>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<crate::models::Href>,
}

impl License {
    pub fn new() -> License {
        License {
            id: None,
            description: None,
            license_key: None,
            licensee_product: None,
            size: None,
            project: None,
        }
    }
}


