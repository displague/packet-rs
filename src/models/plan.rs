/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Plan {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "line", skip_serializing_if = "Option::is_none")]
    pub line: Option<String>,
    #[serde(rename = "specs", skip_serializing_if = "Option::is_none")]
    pub specs: Option<serde_json::Value>,
    #[serde(rename = "pricing", skip_serializing_if = "Option::is_none")]
    pub pricing: Option<serde_json::Value>,
    #[serde(rename = "legacy", skip_serializing_if = "Option::is_none")]
    pub legacy: Option<bool>,
    #[serde(rename = "class", skip_serializing_if = "Option::is_none")]
    pub class: Option<String>,
    #[serde(rename = "available_in", skip_serializing_if = "Option::is_none")]
    pub available_in: Option<Vec<crate::models::Href>>,
}

impl Plan {
    pub fn new() -> Plan {
        Plan {
            id: None,
            slug: None,
            name: None,
            description: None,
            line: None,
            specs: None,
            pricing: None,
            legacy: None,
            class: None,
            available_in: None,
        }
    }
}


