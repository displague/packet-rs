/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterconnectionCreateInput {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A Facility ID or code.
    #[serde(rename = "facility")]
    pub facility: String,
    /// shared
    #[serde(rename = "type")]
    pub _type: String,
    /// primary
    #[serde(rename = "redundancy")]
    pub redundancy: String,
    #[serde(rename = "contact_email", skip_serializing_if = "Option::is_none")]
    pub contact_email: Option<String>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
    /// A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.
    #[serde(rename = "speed", skip_serializing_if = "Option::is_none")]
    pub speed: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl InterconnectionCreateInput {
    pub fn new(name: String, facility: String, _type: String, redundancy: String) -> InterconnectionCreateInput {
        InterconnectionCreateInput {
            name,
            description: None,
            facility,
            _type,
            redundancy,
            contact_email: None,
            project: None,
            speed: None,
            tags: None,
        }
    }
}


