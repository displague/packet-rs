/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@equinixmetal.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "short_id", skip_serializing_if = "Option::is_none")]
    pub short_id: Option<String>,
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "full_name", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "avatar_url", skip_serializing_if = "Option::is_none")]
    pub avatar_url: Option<String>,
    #[serde(rename = "avatar_thumb_url", skip_serializing_if = "Option::is_none")]
    pub avatar_thumb_url: Option<String>,
    #[serde(rename = "two_factor_auth", skip_serializing_if = "Option::is_none")]
    pub two_factor_auth: Option<String>,
    #[serde(rename = "max_projects", skip_serializing_if = "Option::is_none")]
    pub max_projects: Option<i32>,
    #[serde(rename = "max_organizations", skip_serializing_if = "Option::is_none")]
    pub max_organizations: Option<i32>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    #[serde(rename = "fraud_score", skip_serializing_if = "Option::is_none")]
    pub fraud_score: Option<String>,
    #[serde(rename = "last_login_at", skip_serializing_if = "Option::is_none")]
    pub last_login_at: Option<String>,
    #[serde(rename = "emails", skip_serializing_if = "Option::is_none")]
    pub emails: Option<Vec<crate::models::Href>>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "phone_number", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    #[serde(rename = "customdata", skip_serializing_if = "Option::is_none")]
    pub customdata: Option<String>,
}

impl User {
    pub fn new() -> User {
        User {
            id: None,
            short_id: None,
            first_name: None,
            last_name: None,
            full_name: None,
            email: None,
            avatar_url: None,
            avatar_thumb_url: None,
            two_factor_auth: None,
            max_projects: None,
            max_organizations: None,
            created_at: None,
            updated_at: None,
            timezone: None,
            fraud_score: None,
            last_login_at: None,
            emails: None,
            href: None,
            phone_number: None,
            customdata: None,
        }
    }
}


